#!/usr/bin/env groovy

pipeline {
    agent any
    environment
		{ 
       // replace github_token with the copy pasted iD
       GITHUB_TOKEN = credentials('github_token')  
   }
    stages {
        stage('clone_repo') {
            steps {
				    sh "rm -rf for_surf"
                    echo 'Cloning repo'
                    sh 'git clone -b main https://$GITHUB_TOKEN:x-oauth-basic@github.com/aleksey-masl/for_surf.git'
                    }
                }
        stage('Creating_file and pushing file') {
            steps {
                sh '''  
                    cd for_surf
                    echo 'Creating the file job.log'
                    > job.log
					echo "`date "+%Y-%m-%d %T"` - PRjob executed" >> job.log
					git config --global user.email jenkins@example.com
					git config --global user.name Jenkin_bot
					git add .
					git commit -am "created a file"
					git push -u origin main
					pwd
					git status
					'''
					}
                }
        stage('Test') {
            steps {
                    sh "pwd"
                    //sh 'printenv'
                    //sh "exit 1"
                }
            }
        }
             post{
                  success{
                     emailext (
                     to: "lex230323@mail.ru",
                     subject: "${env.JOB_NAME} # ${env.BUILD_NUMBER} - Successful!",
                     body: "sample - ${env.JOB_NAME} # ${env.BUILD_NUMBER} - Successful: \n\n" +
                             "Check console output at ${env.BUILD_URL} to view the results.",
                     attachLog: true)
                  }
                  failure {
                      emailext (
                      to: "lex230323@mail.ru",
                      subject: "${env.JOB_NAME} # ${env.BUILD_NUMBER} - Failure!",
                      body: "sample - ${env.JOB_NAME} # ${env.BUILD_NUMBER} - Failure: \n\n" +
                               "Check console output at ${env.BUILD_URL} to view the results.",
                      attachLog: true)
                  }
             }
}
